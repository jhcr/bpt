# Default values for cloud-app Helm chart
global:
  imageRegistry: ghcr.io
  imageTag: latest
  environment: production
  namespace: app-prod
  domain: example.com
  
# Istio configuration
istio:
  enabled: true
  gateway:
    enabled: true
    className: istio
    hosts:
      - api.example.com
      - app.example.com
  virtualService:
    enabled: true
  destinationRules:
    enabled: true
  security:
    mtls:
      mode: STRICT
    jwt:
      issuer: "https://auth.example.com"
      jwksUri: "https://auth.example.com/auth/.well-known/jwks.json"

# Service configurations
services:
  bff:
    enabled: true
    name: bff
    image: 
      repository: cloud-app/bff
      tag: ""
    replicaCount: 2
    port: 8080
    service:
      type: ClusterIP
      port: 8080
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi
    env:
      ENV: production
      USERPROFILES_URL: http://userprofiles-service:8081
      USERSETTINGS_URL: http://usersettings-service:8082
      AUTHSVC_URL: http://auth-service:8083

  auth-service:
    enabled: true
    name: auth-service
    image:
      repository: cloud-app/auth-service
      tag: ""
    replicaCount: 2
    port: 8083
    service:
      type: ClusterIP
      port: 8083
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi
    env:
      ENV: production
      JWT_ISSUER: "https://auth.example.com"
      JWT_AUDIENCE: "cloud-app"

  userprofiles-service:
    enabled: true
    name: userprofiles-service
    image:
      repository: cloud-app/userprofiles-service
      tag: ""
    replicaCount: 2
    port: 8081
    service:
      type: ClusterIP
      port: 8081
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi
    env:
      ENV: production

  usersettings-service:
    enabled: true
    name: usersettings-service
    image:
      repository: cloud-app/usersettings-service
      tag: ""
    replicaCount: 2
    port: 8082
    service:
      type: ClusterIP
      port: 8082
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi
    env:
      ENV: production
      DYNAMODB_TABLE_USER_SETTINGS: user_settings_prod

  events-service:
    enabled: true
    name: events-service
    image:
      repository: cloud-app/events-service
      tag: ""
    replicaCount: 2
    port: 8084
    service:
      type: ClusterIP
      port: 8084
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 500m
        memory: 512Mi

# Frontend
frontend:
  enabled: true
  name: frontend
  image:
    repository: cloud-app/frontend
    tag: ""
  replicaCount: 2
  port: 80
  service:
    type: ClusterIP
    port: 80
  resources:
    requests:
      cpu: 50m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi

# External dependencies
postgresql:
  enabled: false # Use managed RDS
  
redis:
  enabled: false # Use managed ElastiCache

# Monitoring and observability
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    namespace: monitoring
  prometheusRule:
    enabled: true
    namespace: monitoring

# HPA configuration
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80

# Service Account with IRSA
serviceAccount:
  create: true
  annotations:
    eks.amazonaws.com/role-arn: ""
  name: cloud-app

# Pod Security Context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 10001
  fsGroup: 10001

# Security Context
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true

# Probes
livenessProbe:
  httpGet:
    path: /health/live
    port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3

readinessProbe:
  httpGet:
    path: /health/ready
    port: http
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 3
  failureThreshold: 3

# Node selection
nodeSelector: {}
tolerations: []
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - cloud-app
        topologyKey: kubernetes.io/hostname