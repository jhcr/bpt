{{- range $service, $config := .Values.services }}
{{- if $config.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $config.name }}
  namespace: {{ $.Values.global.namespace }}
  labels:
    app: {{ $config.name }}
    version: v1
    chart: {{ $.Chart.Name }}-{{ $.Chart.Version }}
    release: {{ $.Release.Name }}
    heritage: {{ $.Release.Service }}
spec:
  replicas: {{ $config.replicaCount }}
  selector:
    matchLabels:
      app: {{ $config.name }}
      version: v1
  template:
    metadata:
      labels:
        app: {{ $config.name }}
        version: v1
      annotations:
        sidecar.istio.io/inject: "true"
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ $config.port }}"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: {{ $.Values.serviceAccount.name }}
      securityContext:
        {{- toYaml $.Values.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ $config.name }}
        image: "{{ $.Values.global.imageRegistry }}/{{ $config.image.repository }}:{{ $config.image.tag | default $.Values.global.imageTag }}"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: {{ $config.port }}
          protocol: TCP
        env:
        {{- range $key, $value := $config.env }}
        - name: {{ $key }}
          value: "{{ $value }}"
        {{- end }}
        - name: OTEL_EXPORTER_OTLP_ENDPOINT
          value: "http://otel-collector.monitoring.svc.cluster.local:4317"
        - name: OTEL_SERVICE_NAME
          value: "{{ $config.name }}"
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: "service.name={{ $config.name }},service.version={{ $.Values.global.imageTag }},deployment.environment={{ $.Values.global.environment }}"
        livenessProbe:
          {{- toYaml $.Values.livenessProbe | nindent 10 }}
        readinessProbe:
          {{- toYaml $.Values.readinessProbe | nindent 10 }}
        resources:
          {{- toYaml $config.resources | nindent 10 }}
        securityContext:
          {{- toYaml $.Values.securityContext | nindent 10 }}
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/.cache
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
      {{- with $.Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
{{- end }}

{{- if .Values.frontend.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.frontend.name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ .Values.frontend.name }}
    version: v1
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.frontend.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.frontend.name }}
      version: v1
  template:
    metadata:
      labels:
        app: {{ .Values.frontend.name }}
        version: v1
      annotations:
        sidecar.istio.io/inject: "true"
    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: {{ .Values.frontend.name }}
        image: "{{ .Values.global.imageRegistry }}/{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag | default .Values.global.imageTag }}"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: {{ .Values.frontend.port }}
          protocol: TCP
        resources:
          {{- toYaml .Values.frontend.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
{{- end }}