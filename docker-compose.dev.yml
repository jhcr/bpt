version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: appdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./apps/userprofiles-service/db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  kafka:
    image: bitnami/kafka:3.6
    ports:
      - "9092:9092"
    environment:
      KAFKA_ENABLE_KRAFT: "yes"
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_CFG_NODE_ID: 1
    volumes:
      - kafka_data:/bitnami/kafka
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 3

  localstack:
    image: localstack/localstack:3.0
    ports:
      - "4566:4566"
    environment:
      SERVICES: dynamodb,s3,secretsmanager
      DEBUG: 1
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - localstack_data:/var/lib/localstack
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Services (commented out for now, will be uncommented after implementation)
  # auth-service:
  #   build:
  #     context: ./apps/auth-service
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8083:8080"
  #   environment:
  #     - REDIS_URL=redis://redis:6379/0
  #   depends_on:
  #     - redis
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # bff:
  #   build:
  #     context: ./apps/bff
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8080:8080"
  #   depends_on:
  #     - auth-service
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # userprofiles-service:
  #   build:
  #     context: ./apps/userprofiles-service
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8081:8080"
  #   environment:
  #     - PG_DSN=postgresql://postgres:password@postgres:5432/appdb
  #   depends_on:
  #     - postgres
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

  # usersettings-service:
  #   build:
  #     context: ./apps/usersettings-service
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8082:8080"
  #   environment:
  #     - DYNAMODB_ENDPOINT_URL=http://localstack:4566
  #   depends_on:
  #     - localstack
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3

volumes:
  postgres_data: {}
  redis_data: {}
  kafka_data: {}
  localstack_data: {}